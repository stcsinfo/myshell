global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


frontend K8S-FRONT-API
	acl port-6443 dst_port eq 6443
	bind haproxy_ip:6443
	mode tcp
	use_backend K8S-BACK-API if port-6443

backend K8S-BACK-API
	mode tcp
	balance roundrobin
	server k8s-master0 master0_ip:6443 check
	server k8s-master1 master1_ip:6443 check
	server k8s-master2 master2_ip:6443 check


frontend K8S-FRONT-intern
	bind haproxy_ip:443 ssl crt /etc/ssl/private/STCS2023.pem ciphers AES128+EECDH:AES128+EDH
	bind haproxy_ip:80
	mode http
	redirect scheme https if !{ ssl_fc }
	default_backend K8S-BACK-intern

backend K8S-BACK-intern
	balance roundrobin
	mode http
	server k8s-master0 master0_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	server k8s-master1 master1_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	server k8s-master2 master2_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10

frontend K8S-FRONT-extern
	bind haproxy_ip:443 ssl crt /etc/ssl/private/GIT2023.pem ciphers AES128+EECDH:AES128+EDH
	bind haproxy_ip:80
	mode http
	redirect scheme https if !{ ssl_fc }
	default_backend K8S-BACK-extern

backend K8S-BACK-extern
	balance roundrobin
	mode http
	server k8s-master0 master0_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	server k8s-master1 master1_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	server k8s-master2 master2_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10

frontend MYSQL-FRONT
	bind haproxy_ip:3306
	mode tcp
	default_backend MYSQL-BACK

backend MYSQL-BACK
	mode tcp
	balance leastconn
	server mind2 master0_ip:3306 check

#frontend K8S-BACK-intern-jenkins-web
	#bind haproxy_ip:443 ssl crt /etc/ssl/private/GIT2023.pem ciphers AES128+EECDH:AES128+EDH
	#bind haproxy_ip:80
	#mode http
	#redirect scheme https if !{ ssl_fc }
	#acl prefixed-with-jenkins  path_beg /jenkins
	#http-request redirect code 301 prefix /jenkins unless prefixed-with-jenkins
	#default_backend K8S-BACK-intern-jenkins-web

#backend K8S-BACK-intern-jenkins-web
	#balance roundrobin
	#acl response-is-redirect res.hdr(Location) -m found
	#http-request replace-path /jenkins(/)?(.*) /\2
	#http-request set-header X-Forwarded-Port %[dst_port]
	#http-request add-header X-Forwarded-Proto https if { ssl_fc }
	#http-request set-header X-Forwarded-Host %[req.hdr(Host)]
	#mode http
	#server k8s-master0 master0_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	#server k8s-master1 master1_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	#server k8s-master2 master2_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10

frontend K8S-FRONT-intern-jenkins-web
	bind haproxy_ip:443 ssl crt /etc/ssl/private/GIT2023.pem ciphers AES128+EECDH:AES128+EDH
	bind haproxy_ip:80
	acl prefixed-with-jenkins  path_beg /
	http-request redirect code 301 prefix / unless prefixed-with-jenkins
	mode http
	#redirect scheme https if !{ ssl_fc }
	default_backend K8S-BACK-intern-jenkins-web

backend K8S-BACK-intern-jenkins-web
	mode http
	balance roundrobin
	server k8s-master0 master0_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	server k8s-master1 master1_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	server k8s-master2 master2_ip:443 check ssl verify none fall 3 rise 1 inter 20000 weight 10
	http-request replace-path /(/)?(.*) /\2
	http-request set-header X-Forwarded-Port %[dst_port]
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	http-request set-header X-Forwarded-Host %[req.hdr(Host)]